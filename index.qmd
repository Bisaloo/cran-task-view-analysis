---
title: "`r params$ctv` Task View analysis"
author: "Hugo Gruson"
params:
  ctv: "Epidemiology"
---

```{r}
tf <- tempfile(fileext = ".md")
download.file(
  paste0(
    "https://github.com/cran-task-views/",
    params$ctv,
    "/raw/main/",
    params$ctv,
    ".md"
  ),
  tf
)
```

```{r, message = FALSE}
library(ctv)
library(pkgsearch)
library(dplyr)
library(purrr)
```

```{r}
(
  ctv_pkg_descriptions <- ctv::read.ctv(tf) %>%
    purrr::pluck("packagelist", "name") %>%
    pkgsearch::cran_packages()
)
```

## Best practices

### From`DESCRIPTION`

- has GitHub URLs
- uses roxygen
- uses testing framework
- no deprecated deps
- has vignette


```{r}
desc_checks <- ctv_pkg_descriptions %>%
  transmute(
    has_github_url     = grepl("https://github.com/", URL) | grepl("https://github.com/", BugReports),
    uses_roxygen       = !is.na(RoxygenNote),
    has_knitr_vignette = grepl("knitr", VignetteBuilder),
    uses_testing       = purrr::map_lgl(dependencies, ~ any(.x$package %in% c("testthat", "testit", "unitizer", "RUnit", "tinytest"))),
    has_no_deprecated  = !purrr::map_lgl(dependencies, ~ any(.x$package %in% c("RUnit", "XML", "RCurl", "plyr", "reshape2")))
  )
```

:::{.column-screen-inset}
```{r}
desc_checks %>%
  mutate(
    n_valid_checks = rowSums(.)
  ) %>%
  arrange(desc(n_valid_checks)) %>%
  mutate(across(-n_valid_checks, ~ ifelse(.x, "✅", "❌"))) %>% 
  DT::datatable()
```
:::

### From GitHub

```{r load-gh-helpers}
library(httr)
source("_scripts/gh.R")
```

```{r}
gh_checks <- ctv_pkg_descriptions %>%
  transmute(
    github_repo = dplyr::coalesce(
      stringr::str_match(URL, "https://github.com/(\\w+/\\w+)")[, 2],
      stringr::str_match(BugReports, "https://github.com/(\\w+/\\w+)/issues")[, 2]
    )
  ) %>%
  na.omit() %>%
  transmute(
    has_rmd_readme = purrr::map_lgl(github_repo, ~ gh_file_exists("README.Rmd", .x)),
    has_md_license = purrr::map_lgl(github_repo, ~ gh_file_exists("LICENSE.md", .x)),
    has_pkgdown    = purrr::map_lgl(github_repo, ~ any(gh_file_list_exists(c("_pkgdown.yml", "_pkgdown.yaml", "pkgdown/pkgdown.yml"), .x))),
    has_gha        = purrr::map_lgl(github_repo, ~ gh_file_exists(".github/workflows", .x))
  )
```

:::{.column-screen-inset}
```{r}
gh_checks %>%
  mutate(
    n_valid_checks = rowSums(.)
  ) %>%
  arrange(desc(n_valid_checks)) %>%
  mutate(across(-n_valid_checks, ~ ifelse(.x, "✅", "❌"))) %>% 
  DT::datatable()
```
:::

### Overall

```{r}
all_checks <- merge(
  gh_checks,
  desc_checks,
  by = 0
) |> 
  mutate(package = as.character(Row.names), .keep = "unused")
```

```{r}
library(ggplot2)
scores <- all_checks |> 
  mutate(
    score = rowSums(pick(-package)),
    .keep = "unused"
  )
scores |> 
  ggplot(aes(x = score, y = forcats::fct_reorder(package, score))) +
    geom_histogram(stat = "identity") +
    labs(
      x = "Score",
      y = "Package",
      title = paste("Individual scores in the", params$ctv, "CRAN Task View")
    )
scores |> 
  ggplot(aes(x = score)) +
    geom_histogram(binwidth = 0.5) +
    labs(
      title = paste("Score distribution in the", params$ctv, "CRAN Task View")
    )

all_checks |> 
  tibble::column_to_rownames("package") |> 
  t() |> 
  as.data.frame() |> 
  tibble::rownames_to_column("check") |> 
  mutate(
    passed = rowSums(pick(- check)),
    .keep = "unused"
  ) |> 
  ggplot(aes(x = passed, y = forcats::fct_reorder(check, passed))) +
    geom_histogram(stat = "identity") +
    labs(
      x = "Number of passing packages",
      y = "Check",
      title = paste("Number of", params$ctv, "CRAN Task View packages passing checks")
    )
```
